#!/usr/bin/gawk -f

#######
#
#  Gauss method for solving NxN equalisations.
#
#  Copyright (C) 2008  Efstathios Chatzikyriakidis (stathis.chatzikyriakidis@gmail.com)
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program. If not, see <http://www.gnu.org/licenses/>.
#
#######

BEGIN \
{
  printf ("Give the number of equalisations: ")
  getline num

  if (num <= 0) exit

  print

  x = num + 1
  for (i = 1; i <= num; i++)
  {
    for (j = 1; j <= x; j++)
    { 
      printf ("Give the operator x[%d,%d]: "), i, j
      getline matrix[i,j]
    }

    print
  }

  ok = j = 1
  for (i = 1; i <= num; i++)
  {
    if (matrix[i,j] == 0 && matrix[i,x] != 0)
    {
      print "The system is incompatible."
      ok = 0
      break
    }

    if (matrix[i,j] == 0 && matrix[i,x] == 0)
    {
      print "The system has infinity solutions."
      ok = 0
      break
    }
  }

  if (ok)
  {
    j = 1
    for (i = 1; i <= num; i++)
    {
      matrix[i,x] /= matrix[i,j]
      matrix[i,j] = 1
      j += 1
    }

    for (i = 1; i <= num; i++)
      for (j = 1; j <= num; j++)
      {
        matrix[i,j] = 0

        if (i == j)
          matrix[i,j] = 1
      }

    printf "Solution values: "

    for (i = 1; i <= num; i++)
      printf matrix[i,x] " "

    print
  }
}
